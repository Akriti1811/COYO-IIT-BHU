#include<bits/stdc++.h>
using namespace std;
/*
int fun(int*a,int n, int i,int curr, int sum)
{
    if(curr==sum)
       return 1;
       
    if(i==n ||  curr>sum)
      return 0;
      
    if(a[i]>sum)
      return fun(a,n,i+1,curr,sum)+fun(a,n,i+1,0,sum);
      
    return fun(a,n,i+1,curr+a[i],sum)+fun(a,n,i+1,curr,sum);  
}
*/
int main()
{
    int n; cin>>n;
    
    int a[n];
    
    for(int i=0;i<n;i++)
          cin>>a[i];
          
    int sum; cin>>sum;
    
    int dp[sum+1][n];   memset(dp,0,sizeof(dp));
    
    for(int j=0;j<n;j++)
       {
           if(j==0 && a[j]==0)
                 dp[0][j]=1;
            else if(j==0 && a[j]!=0)
                  dp[0][j]=0;
            else if(a[j]==0)
                dp[0][j]=dp[0][j-1]+1;
            else
               dp[0][j]=dp[0][j-1];
       }
       
       
    for(int i=1;i<=sum;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(j==0 && i==a[j])
                dp[i][j]=1;
            else if(j!=0 && i>a[j])
               dp[i][j]= dp[i][j-1]+dp[i-a[j]][j-1];
            else if(j!=0 && i==a[j])
               dp[i][j]=dp[i][j-1]+1;
            else if(j!=0)
                dp[i][j]=dp[i][j-1];
        }
    }
    
    cout<<dp[sum][n-1]<<endl;
    
    //cout<<fun(a,n,0,0,sum)<<endl;
    
    
    return 0;
}
